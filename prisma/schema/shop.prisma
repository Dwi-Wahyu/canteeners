model Shop {
    id          String  @id @default(uuid())
    name        String
    description String?
    image_url   String
    canteen     Canteen @relation(fields: [canteen_id], references: [id])
    canteen_id  Int

    status           ShopStatus @default(ACTIVE)
    suspended_reason String?

    open_time  DateTime?
    close_time DateTime?

    products Product[]
    orders   Order[]
    owner    User      @relation(fields: [owner_id], references: [id])
    owner_id String    @unique

    order_mode ShopOrderMode @default(READY_ONLY) // metode menyiapkan order    

    payments   Payment[]

    minimum_price Int?
    maximum_price Int?

    average_rating Float           @default(0)
    total_ratings  Int             @default(0)

    shop_carts ShopCart[]

    @@index([canteen_id])
    @@index([name])
    @@map("shops")
}

enum ShopOrderMode {
    PREORDER_ONLY // hanya preorder
    READY_ONLY // hanya pemesanan langsung
    BOTH // bisa keduanya
}

enum ShopStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
}

model ShopComplaint {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())

    order    Order  @relation(fields: [order_id], references: [id])
    order_id String @unique

    proof_url String?
    cause String @db.LongText
    feedback String? @db.LongText
    status ShopComplaintStatus @default(PENDING)

    refund Refund?

    @@map("shop_complaints")
}

enum ShopComplaintStatus {
  PENDING       // Baru dibuat, belum dilihat shop
  UNDER_REVIEW  // Shop sedang cek (lihat foto, chat, dll)
  RESOLVED      // Masalah selesai (bisa dengan/tanpa refund)
  REJECTED      // Ditolak (tidak valid, tidak cukup bukti)
  ESCALATED     // Naik ke admin/canteen (kasus berat)
}

model Payment {
    id Int @id @default(autoincrement())

    method           PaymentMethod
    qr_url           String?
    account_number   String?
    note             String? // bisa berupa nama akun dan bank
    additional_price Float?

    shop    Shop   @relation(fields: [shop_id], references: [id])
    shop_id String

    @@map("payments")
}

enum PaymentMethod {
    QRIS
    BANK_TRANSFER
    CASH
}
